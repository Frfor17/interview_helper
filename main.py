from fastapi import FastAPI, WebSocket, WebSocketDisconnect
from fastapi.responses import HTMLResponse
from fastapi.middleware.cors import CORSMiddleware
from fastapi.staticfiles import StaticFiles
import uvicorn
import os

app = FastAPI()

# CORS (–µ—Å–ª–∏ –Ω—É–∂–µ–Ω –¥–æ—Å—Ç—É–ø –∏–∑–≤–Ω–µ)
app.add_middleware(
    CORSMiddleware,
    allow_origins=["*"],
    allow_credentials=True,
    allow_methods=["*"],
    allow_headers=["*"],
)

# –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã (–≤–∫–ª—é—á–∞—è index.html)
app.mount("/static", StaticFiles(directory="static"), name="static")

@app.get("/", response_class=HTMLResponse)
async def get():
    with open("static/index.html", "r", encoding="utf-8") as f:
        return f.read()

# –ë–æ—Ç-–ª–æ–≥–∏–∫–∞
async def mock_interview_response(message: str) -> str:
    if "—Ä–∞—Å—Å–∫–∞–∂–∏ –æ —Å–µ–±–µ" in message.lower():
        return "–ù–∞—á–Ω–∏ —Å –æ–ø—ã—Ç–∞, –Ω–∞–≤—ã–∫–æ–≤ –∏ –ø–æ—á–µ–º—É —Ç—ã —Ö–æ—á–µ—à—å —ç—Ç—É –ø–æ–∑–∏—Ü–∏—é."
    elif "—Å–ª–∞–±—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã" in message.lower():
        return "–•–æ—Ä–æ—à–æ –≥–æ–≤–æ—Ä–∏—Ç—å –æ —Å–ª–∞–±–æ—Å—Ç—è—Ö, –µ—Å–ª–∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—à—å, –∫–∞–∫ —Å –Ω–∏–º–∏ —Å–ø—Ä–∞–≤–ª—è–µ—à—å—Å—è."
    return f"–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å: '{message}'. –ü–æ–¥—É–º–∞–π, –∫–∞–∫ –±—ã —Ç—ã –æ—Ç–≤–µ—Ç–∏–ª –Ω–∞ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–∏."

@app.websocket("/ws")
async def websocket_endpoint(websocket: WebSocket):
    await websocket.accept()
    try:
        await websocket.send_text("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è –∫ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—é.")
        while True:
            data = await websocket.receive_text()
            response = await mock_interview_response(data)
            await websocket.send_text(response)
    except WebSocketDisconnect:
        print("–ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è")

if __name__ == "__main__":
    uvicorn.run("main:app", host="0.0.0.0", port=8000, reload=True)
